[{"path":"https://bcgov.github.io/bcgwcat/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, interest fostering open welcoming community, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing ’s private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Code Conduct applies within project spaces public spaces individual representing project community. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project maintainer JulieAnn.Ishikawa@gov.bc.ca. complaints reviewed investigated result response deemed necessary appropriate circumstances. Maintainers obligated maintain confidentiality regard reporter incident. Code Conduct adapted Contributor Covenant, version 1.3.0, available http://contributor-covenant.org/version/1/3/0/ project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bcgwcat/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"NA","text":"Government employees, public members private sector encouraged contribute repository forking submitting pull request. (new GitHub, might start basic tutorial check detailed guide pull requests.) Pull requests evaluated repository guardians schedule deemed beneficial committed master. contributors retain original copyright stuff, contributing project, grant world-wide, royalty-free, perpetual, irrevocable, non-exclusive, transferable license users terms license project distributed. project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"opening-the-gui","dir":"Articles","previous_headings":"","what":"Opening the GUI","title":"Shiny GUI Walkthrough","text":"R console type following, hiting enter line. launch Shiny App.","code":"library(bcgwcat) gw_app()"},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"updating-data","dir":"Articles","previous_headings":"","what":"Updating Data","title":"Shiny GUI Walkthrough","text":"first time launch Shiny App data sources likely date.  Click Update recent data (2yr) download rems recent dataset. see progress message lower right corner. look R console, see progress bar advance.  Next, click Update historic data download rems historic dataset. , see progress message lower right corner look R console, see progress bar advance.  Note Together datasets ~ 6.5 GB ’ll wait status green can proceed Historical Data now updated daily, large download may want update unless good reason","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"selecting-data","dir":"Articles","previous_headings":"","what":"Selecting data","title":"Shiny GUI Walkthrough","text":"EMS IDs order download EMS data, ’ll need know EMS IDs sites question. Alpha-Numeric 7 digits, e.g., 1401030, 1401377, E292373  Type EMS IDs “EMS IDs” field. multiple IDs, separate commas. can plain, surrounded quotes (“)  Dates want full date range, simply leave range click “Get convert EMS data” want particular date range, select first last dates wish include (applies complete date range). Click “Get convert EMS data”.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"previewing-data","dir":"Articles","previous_headings":"Selecting data","what":"Previewing data","title":"Shiny GUI Walkthrough","text":"can choose columns preview selecting either “Relevant Columns” (default) “Columns”. Relevant columns show metadata, cations, anions charge balance. data downloaded, affects preview.  results ID, date data filtering available Results tab. can scroll sort data ensure data wanted. charge_balance charge_balance2 values highlighted green (value ranges -10% 10%) red (values < -10% > 10%) indicate possibly problematic samples. charge_balance represents EMS-calculated charge balances charge_balance2 bcgwcat-calculated balances. Note may take minutes, depending amount data requested.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"Shiny GUI Walkthrough","text":"satisfied data, click “Download CSV” download comma-separate file (.csv) click “Download Excel” download colour-coded Excel file data (.xlsx). buttons found top “Results” tab.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"missing-data","dir":"Articles","previous_headings":"","what":"Missing data","title":"Shiny GUI Walkthrough","text":"EMS stations data dates, even data . sure check “Data Messages” window REM Status tab status messages regarding missing data.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"water-quality-summary","dir":"Articles","previous_headings":"","what":"Water Quality Summary","title":"Shiny GUI Walkthrough","text":"Water Quality Summary tab displays information whether specific compounds exceed Drinking Water quality guidelines (guidelines Data Catalogue accessed via bcdata package). default, relevant parameters included (see list top). Parameters can omitted individually (clicking parameter using DELETE button) can added removed (via “Select/Unselect ” button). Parameters can also filtered show problematic values (“Problems ” radio button), non-missing data (“Non-missing ” radio button). Parameters exceed Drinking Water Quality Limit highlighted red. exceed limit highlighted green. data left white.  Note: Values transformed table (“Value (Transformed)”) match units Drinking Water quality guidelines (“Units”). comparisons upper limit exceedances.","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"plots","dir":"Articles","previous_headings":"","what":"Plots","title":"Shiny GUI Walkthrough","text":"Plots can previewed clicking Plots tab. drop-menu left, select EMS ID site wish view. download plots (.e. just ones can see), click “Download Plots” button. zip individual plots ask save file. wish, can change plot settings left hand side including questionable data (Omit ‘bad’ charge balances?; charge balance > 10 < -10) omitting sample legends piper plot (Piper plot legend).","code":""},{"path":"https://bcgov.github.io/bcgwcat/articles/bcgwcat.html","id":"faq","dir":"Articles","previous_headings":"","what":"FAQ","title":"Shiny GUI Walkthrough","text":"doubt, restart RStudio run errors right start, try updating packages: Remember output optimized AquaChem, necessarily data analyses (.e. second row data frame units, wouldn’t work R)","code":"remotes::update_packages() # Copyright 2021 Province of British Columbia #  # Licensed under the Apache License, Version 2.0 (the \"License\"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at  #  # http://www.apache.org/licenses/LICENSE-2.0 #  # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License."},{"path":"https://bcgov.github.io/bcgwcat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steffi LaZerte. Author, maintainer. Andarge Baye. Author. Province British Columbia. Copyright holder.","code":""},{"path":"https://bcgov.github.io/bcgwcat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"LaZerte S, Baye (2024). bcgwcat: BC Groundwater Chemistry Analysis Tool. R package version 0.5.1, https://github.com/bcgov/bcgwcat/, https://bcgov.github.io/bcgwcat/.","code":"@Manual{,   title = {bcgwcat: BC Groundwater Chemistry Analysis Tool},   author = {Steffi LaZerte and Andarge Baye},   year = {2024},   note = {R package version 0.5.1, https://github.com/bcgov/bcgwcat/},   url = {https://bcgov.github.io/bcgwcat/}, }"},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"bcgwcat---groundwater-chemistry-analysis-tool","dir":"","previous_headings":"","what":"BC Groundwater Chemistry Analysis Tool","title":"BC Groundwater Chemistry Analysis Tool","text":"Previously known rems2aquachem, scope tool expanded, renamed better reflect goal bcgwcat provide easy access EMS data well tools specific working groundwater R functions also Shiny user-interface. tool can help : Downloading EMS data via rems package Calculating charge balances Calculating water types Converting data format importing AquaChem Providing water quality summaries Piperplots Stiff plots","code":""},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"BC Groundwater Chemistry Analysis Tool","text":"Install R RStudio Install pak - install.packages(\"pak\") Install bcgwcat - pak::pkg_install(\"bcgov/bcgwcat\") [Update asked] Launch Shiny App - gw_app()","code":""},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"in-detail","dir":"","previous_headings":"","what":"In Detail","title":"BC Groundwater Chemistry Analysis Tool","text":"Update RStudio (’s ) Update R (’s ) Open RStudio Install pak console type following hit enter Install bcgwcat console type following hit enter (sure install updates prompted!)","code":"install.packages(\"pak\") pak::pkg_install(\"bcgov/bcgwcat\")"},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"troubleshooting","dir":"","previous_headings":"In Detail","what":"Troubleshooting","title":"BC Groundwater Chemistry Analysis Tool","text":"Update rems console type following hit enter Note: run errors rems data updates, might due old rems caches. Uninstall rems - RStudio, go lower right hand window, click “Packages” tab, search bar, search “rems”, click “X” circle right ’s name. Remove rems cache - Delete cache folders going C:\\Users\\YOUR_USER\\AppData\\Local (windows) ~/Library/Application Support (mac) delete “rems” folder Re-install rems pak::pkg_install(\"bcgov/rems\") try Update packages run errors right start, consider updating packages.","code":"pak::pkg_install(\"bcgov/rems\") pak::pkg_install(\"bcgov/bcgwcat\", upgrade = TRUE)"},{"path":[]},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"shiny-user-interface","dir":"","previous_headings":"Using bcgwcat","what":"Shiny User-Interface","title":"BC Groundwater Chemistry Analysis Tool","text":"Type line R console prompt (screen >) hit ‘Enter’. See tutorial -depth look use User Interface Screenshot","code":"bcgwcat::gw_app() # Launch the app"},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"r-command-line","dir":"","previous_headings":"Using bcgwcat","what":"R command line","title":"BC Groundwater Chemistry Analysis Tool","text":"bcgwcat can also used directly R. extract EMS data, convert use AquaChem… (default saved CSV) create plots…","code":"library(bcgwcat) r <- rems_to_aquachem(ems_ids = c(\"1401030\", \"1401377\", \"E292373\")) #> Checking for locally stored historical data...  #> Last download was 2 days ago  #> If you would like to update historical data, run 'rems::download_historic_data()'  #> Checking for locally stored recent data...  #> Fetching data from cache...  #> For consistency EMS charge balances, anion sums, and cation sums have been replaced with recalculated values. #> See `?charge_balance` for more details. r #> # A tibble: 16 × 178 #>    Sample_Date  SampleID    Coord_Lat Project     Coord_Long StationID Watertype #>    <chr>        <chr>       <chr>     <chr>       <chr>      <chr>     <chr>     #>  1 \"\"           \"\"          °         \"\"          °          \"\"        \"\"        #>  2 \"1987-07-07\" \"1401030-1\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  3 \"1991-08-07\" \"1401030-2\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  4 \"1994-06-08\" \"1401030-3\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  5 \"2001-09-09\" \"1401030-4\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  6 \"2009-11-11\" \"1401030-5\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  7 \"2010-08-09\" \"1401030-6\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  8 \"2016-11-02\" \"1401030-7\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Fresh W… #>  9 \"2018-06-14\" \"1401030-8\" 49.20635  \"BACKGROUN… -119.82532 \"075\"     \"Ground … #> 10 \"1987-07-07\" \"1401377-1\" 49.175    \"BACKGROUN… -119.7353  \"203\"     \"Fresh W… #> 11 \"1989-10-11\" \"1401377-2\" 49.175    \"BACKGROUN… -119.7353  \"203\"     \"Fresh W… #> 12 \"1994-03-24\" \"1401377-3\" 49.175    \"BACKGROUN… -119.7353  \"203\"     \"Fresh W… #> 13 \"2016-11-02\" \"1401377-4\" 49.175    \"BACKGROUN… -119.7353  \"203\"     \"Fresh W… #> 14 \"2020-06-29\" \"1401377-5\" 49.175    \"BACKGROUN… -119.7353  \"203\"     \"Ground … #> 15 \"2015-03-06\" \"E292373-1\" 49.364604 \"GROUNDWAT… -124.6141… \"426\"     \"Fresh W… #> 16 \"2017-10-11\" \"E292373-2\" 49.364604 \"GROUNDWAT… -124.6141… \"426\"     \"Fresh W… #> # ℹ 171 more variables: Analysis_Date <chr>, shortWatertype <chr>, #> #   Comment <chr>, Reference <chr>, Quality_control <chr>, Duplicate_ID <chr>, #> #   Labcode <chr>, Location <chr>, Geology <chr>, X <chr>, Y <chr>, #> #   Elevation <chr>, Well_Depth <chr>, Screen_Top <chr>, Screen_Mid <chr>, #> #   Screen_Bottom <chr>, Gradient <chr>, Station_Comment <chr>, #> #   Sample_Depth <chr>, Temp <chr>, `14C` <chr>, `18O` <chr>, `2H` <chr>, #> #   Ag_diss <chr>, Ag_tot <chr>, Al_diss <chr>, Al_tot <chr>, As_diss <chr>, … piper_plot(r, ems_id = \"1401030\") stiff_plot(r, ems_id = \"1401030\")"},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"vignettetutorials","dir":"","previous_headings":"","what":"Vignette/Tutorials","title":"BC Groundwater Chemistry Analysis Tool","text":"See bcgwcat website","code":""},{"path":"https://bcgov.github.io/bcgwcat/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"BC Groundwater Chemistry Analysis Tool","text":"Copyright 2024 Province British Columbia Licensed Apache License, Version 2.0 (“License”); may use file except compliance License. may obtain copy License http://www.apache.org/licenses/LICENSE-2.0 Unless required applicable law agreed writing, software distributed License distributed “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied. See License specific language governing permissions limitations License.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/charge_balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate charge balance — charge_balance","title":"Calculate charge balance — charge_balance","text":"Calculates charge balances based ALS formula. Note: Original EMS charge balances, anion sums cation sums omitted.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/charge_balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate charge balance — charge_balance","text":"","code":"charge_balance(d)"},{"path":"https://bcgov.github.io/bcgwcat/reference/charge_balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate charge balance — charge_balance","text":"d Data set formatted AquaChem (output rems_to_aquachem())","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/charge_balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate charge balance — charge_balance","text":"Data frame","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/charge_balance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate charge balance — charge_balance","text":"Potential changes workflows years made difficult ascertain exactly charge balances calculated older samples. resulted discrepancies EMS locally calculated charge balances. Therefore consistency, calculate charge balances samples using ALS formula . One difference calculation ALS, use significant digits calculating MEQ. anion sum = Cl_meq + SO4_meq + F_meq + NO3_meq + NO2_meq + Means_Alk_meq cation sum = Ca_meq + Mg_meq + Na_meq + K_meq + Al_diss_meq + Cu_diss_meq + Fe_diss_meq + Mn_diss_meq + Zn_diss_meq + NH4_meq + (10 ^ (-pH_lab)) * 1000 Charge balance = 100 x (Cation Sum - Anion sum) / (Cation Sum + Anion Sum) Missing values ignored (ie. generally treated 0). However, values cations anions missing charge balance NA.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/check_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for data in rems — check_present","title":"Check for data in rems — check_present","text":"Returns message regarding whether data requested actually found.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/check_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for data in rems — check_present","text":"","code":"check_present(d, ems_ids, type = \"all\")"},{"path":"https://bcgov.github.io/bcgwcat/reference/check_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for data in rems — check_present","text":"d Data frame. Filtered output get_rems(). ems_ids Character vector. EMS IDs type Character. Either \"\" (data) \"date\" (date-filtered data)","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/check_present.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for data in rems — check_present","text":"Character vector EMS IDs data (omitting ones found).","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/get_rems.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from rems — get_rems","title":"Fetch data from rems — get_rems","text":"Use rems::rems-package() download data filter .","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/get_rems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from rems — get_rems","text":"","code":"get_rems(ems_ids, date_range, interactive, dont_update)"},{"path":"https://bcgov.github.io/bcgwcat/reference/get_rems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from rems — get_rems","text":"ems_ids Character vector. EMS IDs filter . date_range Character vector. Start end date range (YYYY-MM-DD) interactive Logical. Whether allow interactive queries rems package. dont_update Logical. Whether avoid updating EMS database","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/get_rems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from rems — get_rems","text":"data frame","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/gw_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Shiny app — gw_app","title":"Launch Shiny app — gw_app","text":"Interactive interface filtering formatting data, summarizing water quality creating piper stiff plots.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/gw_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Shiny app — gw_app","text":"","code":"gw_app()"},{"path":"https://bcgov.github.io/bcgwcat/reference/gw_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Shiny app — gw_app","text":"","code":"if (FALSE) gw_app()"},{"path":"https://bcgov.github.io/bcgwcat/reference/meq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MEQ values — meq","title":"Calculate MEQ values — meq","text":"Calculates MEQ values 'long' data mg/L. Expects columns: \"aqua_code\" \"RESULT\", \"aqua_code\" parameter type (e.g., \"Zn_diss\") RESULT numeric concentration mg/L.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/meq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MEQ values — meq","text":"","code":"meq(d, drop_na = FALSE)"},{"path":"https://bcgov.github.io/bcgwcat/reference/meq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MEQ values — meq","text":"d Data frame. Long data containing parameters results drop_na Logical. Whether omit missing parameters","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/meq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MEQ values — meq","text":"conversion details see included data frame, meq_conversion. Also see ?meq_conversion description data. MEQs calculated dividing parameter concentration mg/L conversion factor. Note: internal function, exported clarity calculations","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/meq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MEQ values — meq","text":"","code":"d <- data.frame(aqua_code = c(\"Cl\", \"HCO3\"), RESULT = c(5.7, 38.3)) d #>   aqua_code RESULT #> 1        Cl    5.7 #> 2      HCO3   38.3 meq(d, drop_na = TRUE) #> # A tibble: 2 × 4 #>   aqua_code RESULT UNIT  aqua_unit #>   <chr>      <dbl> <chr> <chr>     #> 1 Cl_meq     0.161 meq   meq       #> 2 HCO3_meq   0.628 meq   meq       meq(d) #> # A tibble: 18 × 4 #>    aqua_code    RESULT UNIT  aqua_unit #>    <chr>         <dbl> <chr> <chr>     #>  1 Al_diss_meq  NA     meq   meq       #>  2 CO3_meq      NA     meq   meq       #>  3 Ca_meq       NA     meq   meq       #>  4 Cl_meq        0.161 meq   meq       #>  5 Cu_diss_meq  NA     meq   meq       #>  6 F_meq        NA     meq   meq       #>  7 Fe_diss_meq  NA     meq   meq       #>  8 HCO3_meq      0.628 meq   meq       #>  9 K_meq        NA     meq   meq       #> 10 Meas_Alk_meq NA     meq   meq       #> 11 Mg_meq       NA     meq   meq       #> 12 Mn_diss_meq  NA     meq   meq       #> 13 NH4_meq      NA     meq   meq       #> 14 NO2_meq      NA     meq   meq       #> 15 NO3_meq      NA     meq   meq       #> 16 Na_meq       NA     meq   meq       #> 17 SO4_meq      NA     meq   meq       #> 18 Zn_diss_meq  NA     meq   meq"},{"path":"https://bcgov.github.io/bcgwcat/reference/meq_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Details used to calculate milli-equivalents per litre — meq_conversion","title":"Details used to calculate milli-equivalents per litre — meq_conversion","text":"dataset containing atomic mass, valency state corresponding MEQ conversion factor relevant parameters.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/meq_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Details used to calculate milli-equivalents per litre — meq_conversion","text":"","code":"meq_conversion"},{"path":"https://bcgov.github.io/bcgwcat/reference/meq_conversion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Details used to calculate milli-equivalents per litre — meq_conversion","text":"data frame 4 variables: param Parameter name (corresponds AquaChem names) mass Atomic mass (https://en.wikipedia.org/wiki/List_of_elements_by_atomic_properties) valency_state Valency conversion Conversion constant (mass/valency_state)","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See dplyr::%>% details.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bcgov.github.io/bcgwcat/reference/piper_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Piper plot — piper_plot","title":"Create Piper plot — piper_plot","text":"Create Piper plot","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/piper_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Piper plot — piper_plot","text":"","code":"piper_plot(   d,   ems_id = NULL,   group = \"ems_id\",   legend = TRUE,   legend_position = \"topleft\",   legend_title = group,   valid = TRUE,   plot_data = FALSE,   point_colour = \"viridis\",   point_size = 0.1,   point_filled = TRUE,   point_shape = \"circle\" )"},{"path":"https://bcgov.github.io/bcgwcat/reference/piper_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Piper plot — piper_plot","text":"d Data frame. AquaChem formatted dataset ems_id Character. Ids plot dataset includes one group Character. Column group data colour, shape, filled size. legend Logical. Whether show legend legend_position Character Numeric.. Location legend. Must one \"topleft\", \"topright\", etc. (see ?legend options), vector two numeric values x, y specify exact position. legend_title Character. Title legend. Defaults group. valid Logical. Keep valid data (charge balances <=10) plot_data Logical. Whether return plot data rather plot point_colour Character. Colour colours colour points. Either single value (applied ), vector values length number groups. Can also \"viridis\", use viridis colour scale. point_size Numeric. Point size. Either single value (applied ), vector values length number groups. point_filled Logical. Whether fill point shapes . Either single value (applied ), vector values length number groups. point_shape Character. Shape points use. Valid options \"circle\", \"square\" \"triangle\". Either single value (applied ), vector values length number groups.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"Fetch convert data rems AquaChem format","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"","code":"rems_to_aquachem(   ems_ids,   date_range = NULL,   save = TRUE,   out_folder = \"./\",   out_file = NULL,   interactive = TRUE,   dont_update = TRUE )"},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"ems_ids Character vector. Unique EMS ids date_range Character vector. Start end dates (YYYY-MM-DD) save Logical. Whether save data csv. out_folder Character. save data AquaChem out_file Character. call data file AquaChem. Default aquachem_DATE.csv interactive Logical. Whether ask caching data. dont_update Logical. Whether avoid updating EMS interactive FALSE","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"Outputs Excel CSV file format import AquaChem.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"out_folder tell function store aquachem data.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/rems_to_aquachem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch and convert data from rems to AquaChem format — rems_to_aquachem","text":"","code":"if (FALSE) { # Convert one well and save the data in the working directory rems_to_aquachem(ems_ids = \"E289551\")  # Convert several wells (this will overwrite the previous data!) rems_to_aquachem(ems_ids = c(\"1401030\", \"1401377\"))  # To specify a date range (Year-Month-Day) rems_to_aquachem(ems_ids = c(\"1401030\", \"1401377\"),                  date_range = c(\"2000-01-01\", \"2015-01-01\"))  # To name the ouput (extension should be .csv, .txt, or .dat) rems_to_aquachem(ems_ids = \"1401030\", out_file = \"water_quality01.csv\")  # To save the output to a specific folder # (here, the Outputs folder in the Rcode folder on the H drive) # Note that the out_folder must exist or you'll get an error rems_to_aquachem(ems_ids = c(\"1401030\", \"1401377\"),                  out_folder = \"H:\\\\Rcode\\\\Outputs/\")  # All together now! rems_to_aquachem(ems_ids = c(\"1401030\", \"1401377\"),                  date_range = c(\"2000-01-01\", \"2015-01-01\"),                  out_file = \"water_quality05.csv\",                  out_folder = \"H:\\\\Rcode\\\\Outputs/\")  # Clean up unlink(\"water_quality01.csv\") unlink(paste0(\"aquachem_\", Sys.Date(), \".csv\")) }"},{"path":"https://bcgov.github.io/bcgwcat/reference/stiff_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Stiff plot — stiff_plot","title":"Create Stiff plot — stiff_plot","text":"Create Stiff plot","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/stiff_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Stiff plot — stiff_plot","text":"","code":"stiff_plot(d, ems_id = NULL, colour = TRUE, legend = TRUE, valid = TRUE)"},{"path":"https://bcgov.github.io/bcgwcat/reference/stiff_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Stiff plot — stiff_plot","text":"d AquaChem formatted dataset ems_id Ids plot dataset includes one colour Whether add colour ems_id legend Whether show legend valid Logical. Keep valid data (charge balances <=10)","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. expr() quo() quote one expression. quo() wraps quoted expression quosure. plural variants rlang::exprs() quos() return list quoted expressions quosures. enexpr() enquo() capture expression supplied argument user current function (enquo() wraps expression quosure). enexprs() enquos() capture multiple expressions supplied arguments, including .... exprs() exported avoid conflicts Biobase::exprs(), therefore one always use rlang::exprs(). learn tidy eval use tools, visit http://rlang.r-lib.org Metaprogramming section Advanced R.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/units_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove units — units_remove","title":"Remove units — units_remove","text":"main rems_to_aquachem() function downloads EMS data formats use external program, AquaChem. However, occasionally may wish work formatted EMS data R. function removes extra 'units' row converts columns make data usable R.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/units_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove units — units_remove","text":"","code":"units_remove(d)"},{"path":"https://bcgov.github.io/bcgwcat/reference/units_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove units — units_remove","text":"d Data frame output rems_to_aquachem()","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/units_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove units — units_remove","text":"Data frame","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/units_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove units — units_remove","text":"","code":"if (FALSE) { # Get and format one well for use in AquaChem r <- rems_to_aquachem(ems_ids = \"E289551\", save = FALSE)  # Remove units and convert columns to appropriate formats for use in R r <- units_remove(r)  }"},{"path":"https://bcgov.github.io/bcgwcat/reference/water_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess problems with water quality — water_quality","title":"Assess problems with water quality — water_quality","text":"Assess problems water quality","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess problems with water quality — water_quality","text":"","code":"water_quality(d)"},{"path":"https://bcgov.github.io/bcgwcat/reference/water_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess problems with water quality — water_quality","text":"d EMS data formated AquaChem returned rems_to_aquachem()","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess problems with water quality — water_quality","text":"Tibble sites, samples, parameters, water quality limits problems.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate water type — water_type","title":"Calculate water type — water_type","text":"Water type based anions Cl, SO4, HCO3 cations Ca, Mg, Na K. Elements ranked proportion MEQ, greater 10% listed descending order presence, cations first. Water type calculated samples valid charge balances. Missing ions ignored (.e. treated 0).","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate water type — water_type","text":"","code":"water_type(d)"},{"path":"https://bcgov.github.io/bcgwcat/reference/water_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate water type — water_type","text":"d Data frame. Must contain columns Sample_Date, SampleID, StationID, Cl_meq, SO4_meq, HCO3_meq, Ca_meq, Mg_meq, Na_meq, K_meq, charge_balance.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate water type — water_type","text":"Data frame added column water_type.","code":""},{"path":"https://bcgov.github.io/bcgwcat/reference/water_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate water type — water_type","text":"","code":"d <- data.frame(Sample_Date = \"2022-01-01\", SampleID = \"999990-01\", StationID = 000,                 Cl_meq = 0.0226, SO4_meq = 0.0208, HCO3_meq = 1.54,                 Ca_meq = 0.187, Mg_meq = 0.490, Na_meq = 0.465, K_meq = 0.0665,                 charge_balance = 0.5)  d <- water_type(d) d #>   Sample_Date  SampleID StationID Cl_meq SO4_meq HCO3_meq Ca_meq Mg_meq Na_meq #> 1  2022-01-01 999990-01         0 0.0226  0.0208     1.54  0.187   0.49  0.465 #>    K_meq charge_balance water_type #> 1 0.0665            0.5 Mg-Na-HCO3"},{"path":"https://bcgov.github.io/bcgwcat/news/index.html","id":"bcgwcat-060","dir":"Changelog","previous_headings":"","what":"bcgwcat 0.6.0","title":"bcgwcat 0.6.0","text":"Update docs etc. light Added details Shiny app explaining private vs. public EMS data, water quality guidelines parameter/unit changes Fixed water quality summary exclude Nitrate Nitrate limits measured N (applicable ) Fixed bug, piperplot respect EMS IDs plot (ems_id argument)","code":""}]
